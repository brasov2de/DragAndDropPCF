<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="Dianamics" constructor="DragAndDrop" version="1.0.22" display-name-key="DragAndDrop" description-key="DragAndDrop description" control-type="virtual" >
  
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="Name" display-name-key="Name" description-key="Name" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="IsDraggable" display-name-key="IsDraggable" description-key="IsDraggable" of-type="TwoOptions" usage="bound" />
    <property name="IsDroppable" display-name-key="IsDroppable" description-key="IsDroppable" of-type="TwoOptions" usage="bound" />
    
    <property name="IconName" display-name-key="IconName" description-key="IconName" of-type="SingleLine.Text" usage="bound" />
    <property name="IconAlign" display-name-key="IconAlign" description-key="IconAlign" of-type="Enum" usage="input"  >
        <value name="Left" display-name-key="Left" default="true">Left</value>
        <value name="Center" display-name-key="Center" >Center</value>
        <value name="Right" display-name-key="Right" >Right</value>
    </property>
    <property name="IconVerticalAlign" display-name-key="IconVerticalAlign" description-key="IconVerticalAlign" of-type="Enum" usage="input" >
        <value name="Top" display-name-key="Top" default="true">Top</value>
        <value name="Center" display-name-key="Center" >Center</value>
        <value name="Bottom" display-name-key="Bottom" >Bottom</value>
    </property>
    <property name="IconColor" display-name-key="IconColor" description-key="IconColor" of-type="SingleLine.Text" usage="input" />
    <property name="IconSize" display-name-key="IconSize" description-key="IconSize" of-type="SingleLine.Text" usage="input" />
   
    <property name="DepthDragImage" display-name-key="DepthDragImage" description-key="DepthDragImage" of-type="Whole.None" usage="input" default-value="5" />
    <property name="DraggedData" display-name-key="DraggedData" description-key="DraggedData" of-type="SingleLine.Text" usage="bound" />

    <property name="IsDragging" display-name-key="IsDragging" description-key="IsDragging" of-type="TwoOptions" usage="output" />
    
    <event name="OnDrop" display-name-key="OnDrop" description-key="OnDrop" />
    <property name="DroppedData" display-name-key="DroppedData" description-key="DroppedData" of-type="Object" usage="output" />

    <property name="DroppedDataSchema" display-name-key="DroppedDataSchema" description-key="DroppedDataSchema" of-type="SingleLine.Text" usage="input" hidden="true"/> 

    <property-dependencies>
      <!-- Define the dependency between schema and the object type property -->
      <property-dependency input="DroppedDataSchema" output="DroppedData" required-for="schema" />
    </property-dependencies>

    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.8.6" />
      <platform-library name="Fluent" version="8.29.0" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/DragAndDrop.css" order="1" />
      <resx path="strings/DragAndDrop.1033.resx" version="1.0.0" />
      -->
    </resources>
   
  </control>
</manifest>
